use ntapi::ntobapi::DUPLICATE_SAME_ACCESS;
use process::myntopenprocess;
use winapi::um::{errhandlingapi::GetLastError, memoryapi::{VirtualAlloc, VirtualFree, WriteProcessMemory}, processthreadsapi::{OpenProcess, GetCurrentProcessId, OpenProcessToken, GetCurrentProcess}, winnt::{PROCESS_QUERY_LIMITED_INFORMATION, TOKEN_QUERY, TOKEN_DUPLICATE, PROCESS_ALL_ACCESS, PROCESS_QUERY_INFORMATION, TOKEN_ASSIGN_PRIMARY, TOKEN_ADJUST_PRIVILEGES, PROCESS_DUP_HANDLE, TOKEN_ALL_ACCESS, TOKEN_ADJUST_DEFAULT, TOKEN_ADJUST_SESSIONID}};
use winapi::ctypes::*;
use winapi::um::handleapi::*;
use winapi::shared::ntdef::{POBJECT_ATTRIBUTES,NTSTATUS,OBJECT_ATTRIBUTES};

use ntapi::ntapi_base::*;
use winapi::um::winnt::*;
use std::arch::asm;
use std::arch::global_asm;
pub mod process;


fn main() {
   
        unsafe{

            let res = process::hellsgate("NtOpenProcessToken");
            match res{
                Ok(ssn) => {println!("ssn: {:x?}",ssn)},
                Err(e) => {
                    println!("error: {}",e)
                }
            };
                return ();

        }
}
